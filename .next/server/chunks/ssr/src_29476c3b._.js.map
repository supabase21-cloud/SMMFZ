{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport Link from \"next/link\";\nimport { useAuth } from \"@/context/AuthContext\";\nimport { getOrders, type Order } from \"@/lib/data\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { PlusCircle, ShoppingCart } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function DashboardPage() {\n  const { user, isLoading: isAuthLoading } = useAuth();\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [isOrdersLoading, setIsOrdersLoading] = useState(true);\n  const router = useRouter();\n\n  const fetchOrders = useCallback(async () => {\n    if (!user) return;\n    setIsOrdersLoading(true);\n    try {\n      const userOrders = await getOrders();\n      const filteredOrders = userOrders.filter(o => o.userEmail === user.email);\n      setOrders(filteredOrders);\n    } catch (error) {\n      console.error(\"Failed to fetch orders:\", error);\n    } finally {\n      setIsOrdersLoading(false);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      fetchOrders();\n    } else if (!isAuthLoading) {\n      setIsOrdersLoading(false);\n    }\n  }, [user, isAuthLoading, fetchOrders]);\n  \n  // Auto-refresh on tab focus\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        window.location.reload();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    if (!isAuthLoading && !user) {\n      router.replace(\"/login\");\n    }\n  }, [user, isAuthLoading, router]);\n\n  const getStatusBadgeVariant = (status: Order[\"status\"]) => {\n    switch (status) {\n      case \"Pending\":\n        return \"secondary\";\n      case \"Complete\":\n        return \"default\";\n      case \"Cancelled\":\n        return \"destructive\";\n      default:\n        return \"outline\";\n    }\n  };\n  \n  if (isAuthLoading || !user) {\n     return (\n        <div className=\"container mx-auto py-4 sm:py-8\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-6 gap-4\">\n                <Skeleton className=\"h-9 w-64\" />\n                <div className=\"flex gap-2\">\n                    <Skeleton className=\"h-10 w-32\" />\n                    <Skeleton className=\"h-10 w-36\" />\n                </div>\n            </div>\n            <div className=\"grid gap-6 lg:grid-cols-3 mb-8\">\n                <Card>\n                    <CardHeader><CardTitle>Account Details</CardTitle></CardHeader>\n                    <CardContent className=\"space-y-4\">\n                        <Skeleton className=\"h-5 w-full\" />\n                        <Skeleton className=\"h-5 w-full\" />\n                        <Skeleton className=\"h-5 w-full\" />\n                    </CardContent>\n                </Card>\n                <Card className=\"lg:col-span-2\">\n                    <CardHeader><CardTitle>Available Funds</CardTitle></CardHeader>\n                    <CardContent><Skeleton className=\"h-10 w-48\" /></CardContent>\n                </Card>\n            </div>\n            <Card>\n                <CardHeader>\n                    <CardTitle>Order History</CardTitle>\n                    <CardDescription>Here's a list of your recent orders.</CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"space-y-4\">\n                        <Skeleton className=\"h-10 w-full\" />\n                        <Skeleton className=\"h-10 w-full\" />\n                        <Skeleton className=\"h-10 w-full\" />\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n     );\n  }\n\n  const maskedPassword = \"*\".repeat(10);\n\n  return (\n    <div className=\"container mx-auto py-4 sm:py-8\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center justify-between mb-6 gap-4\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold\">Welcome, {user.username}!</h1>\n        <div className=\"flex gap-2\">\n            <Button asChild>\n              <Link href=\"/order\"><PlusCircle /> New Order</Link>\n            </Button>\n            <Button asChild variant=\"outline\">\n                <Link href=\"/deposit\"><ShoppingCart /> Deposit Funds</Link>\n            </Button>\n        </div>\n      </div>\n      \n      <div className=\"grid gap-6 lg:grid-cols-3 mb-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Account Details</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <p><strong>Email:</strong> {user.email}</p>\n            <p><strong>Username:</strong> {user.username}</p>\n            <p><strong>Password:</strong> {maskedPassword}</p>\n          </CardContent>\n        </Card>\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle>Available Funds</CardTitle>\n            <CardDescription>Your current account balance.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-4xl font-bold\">PKR {user.funds.toFixed(2)}</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Order History</CardTitle>\n          <CardDescription>Here's a list of your recent orders.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isOrdersLoading ? (\n             <div className=\"space-y-4\">\n                <div className=\"hidden md:block\">\n                  <Skeleton className=\"h-10 w-full\" />\n                  <Skeleton className=\"h-10 w-full\" />\n                  <Skeleton className=\"h-10 w-full\" />\n                </div>\n                <div className=\"md:hidden grid gap-4\">\n                  <Skeleton className=\"h-32 w-full\" />\n                  <Skeleton className=\"h-32 w-full\" />\n                </div>\n             </div>\n          ) : (\n            <>\n              {/* Desktop View */}\n              <div className=\"hidden md:block\">\n                  <Table>\n                      <TableHeader>\n                      <TableRow>\n                          <TableHead>Service</TableHead>\n                          <TableHead>Quantity</TableHead>\n                          <TableHead>Price</TableHead>\n                          <TableHead>Status</TableHead>\n                          <TableHead>Date</TableHead>\n                      </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                      {orders.map((order) => (\n                          <TableRow key={order.id}>\n                          <TableCell className=\"capitalize\">{order.platform} - {order.serviceType}</TableCell>\n                          <TableCell>{order.quantity}</TableCell>\n                          <TableCell>PKR {order.price.toFixed(2)}</TableCell>\n                          <TableCell>\n                              <Badge variant={getStatusBadgeVariant(order.status)}>{order.status}</Badge>\n                          </TableCell>\n                          <TableCell>{new Date(order.createdAt).toLocaleDateString()}</TableCell>\n                          </TableRow>\n                      ))}\n                      </TableBody>\n                  </Table>\n              </div>\n\n              {/* Mobile View */}\n              <div className=\"md:hidden grid gap-4\">\n                  {orders.map((order) => (\n                  <Card key={order.id}>\n                      <CardHeader>\n                          <CardTitle className=\"text-lg capitalize\">{order.platform} - {order.serviceType}</CardTitle>\n                          <CardDescription>\n                              {new Date(order.createdAt).toLocaleDateString()}\n                          </CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"space-y-2\">\n                          <div className=\"flex justify-between\">\n                              <span className=\"font-medium\">Status:</span>\n                              <Badge variant={getStatusBadgeVariant(order.status)}>{order.status}</Badge>\n                          </div>\n                          <div className=\"flex justify-between\">\n                              <span className=\"font-medium\">Quantity:</span>\n                              <span>{order.quantity}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                              <span className=\"font-medium\">Price:</span>\n                              <span>PKR {order.price.toFixed(2)}</span>\n                          </div>\n                      </CardContent>\n                  </Card>\n                  ))}\n              </div>\n              {orders.length === 0 && <p className=\"text-center text-muted-foreground py-4\">You haven't placed any orders yet.</p>}\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}