{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/supabase.ts"],"sourcesContent":["\nimport { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = \"https://rzzwuqpnimflfvtthexu.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ6end1cXBuaW1mbGZ2dHRoZXh1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUyNDk0MDMsImV4cCI6MjA3MDgyNTQwM30.w_eJfIbJKCx63scIhXUCPgt8L0HtN8B1y1H-_xvk5P0\";\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error(\"Supabase URL and/or anonymous key are not provided.\");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,cAAc;AACpB,MAAM,kBAAkB;AAExB,uCAAsC;;AAEtC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\n\n// This file connects to Supabase for data management.\n\"use client\";\n\nimport { supabase } from \"./supabase\";\nimport type { User, Order, Service, NewOrder, NewUser, ServicePrices, PlaceOrderResult } from \"@/types\";\n\n// --- USER MANAGEMENT ---\nexport const getUser = async (email: string): Promise<User | null> => {\n  const { data, error } = await supabase\n    .from(\"users\")\n    .select(\"*\")\n    .eq(\"email\", email)\n    .single();\n\n  if (error && error.code !== 'PGRST116') { // PGRST116: \"exact one row expected, but 0 rows returned\"\n    console.error(\"Error getting user:\", error);\n    return null;\n  }\n  return data;\n};\n\nexport const getUserByUsername = async (username: string): Promise<User | null> => {\n    const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .eq('username', username)\n        .single();\n    if (error && error.code !== 'PGRST116') {\n        console.error(\"Error getting user by username:\", error);\n        return null;\n    }\n    return data;\n}\n\nexport const registerUser = async (newUser: NewUser): Promise<{ user: User | null, error?: string }> => {\n  // Step 1: Sign up the user with Supabase Auth\n  const { data: authData, error: authError } = await supabase.auth.signUp({\n    email: newUser.email,\n    password: newUser.password,\n  });\n\n  if (authError) {\n    console.error(\"Supabase auth signup error:\", authError.message);\n    return { user: null, error: authError.message };\n  }\n\n  if (!authData.user) {\n    console.error(\"Supabase auth signup did not return a user.\");\n    return { user: null, error: \"Could not create user.\" };\n  }\n\n  // Step 2: The database trigger 'on_auth_user_created' will automatically\n  // create an entry in the 'public.users' table. We no longer need to do it from client-side code.\n  // We just need to fetch the newly created user profile.\n\n  // Let's try to fetch the user profile a few times, as the trigger might have a slight delay.\n  for (let i = 0; i < 5; i++) {\n    const { data: dbData, error: dbError } = await supabase\n      .from(\"users\")\n      .select(\"*\")\n      .eq(\"id\", authData.user.id)\n      .single();\n\n    if (dbData) {\n      return { user: dbData, error: undefined };\n    }\n    // Wait for 500ms before retrying\n    await new Promise(resolve => setTimeout(resolve, 500));\n  }\n\n  console.error(\"Could not retrieve user profile from database after registration.\");\n  return { user: null, error: \"Could not save or retrieve user profile.\" };\n};\n\n\nexport const updateUserFunds = async (email: string, amount: number): Promise<User | null> => {\n    const user = await getUser(email);\n    if (!user) return null;\n\n    const newFunds = user.funds + amount;\n    return setUserFunds(email, newFunds);\n}\n\nexport const setUserFunds = async (email: string, newBalance: number): Promise<User | null> => {\n    const { data, error } = await supabase\n        .from('users')\n        .update({ funds: newBalance })\n        .eq('email', email)\n        .select()\n        .single();\n    if (error) {\n        console.error(\"Error setting user funds:\", error);\n        return null;\n    }\n    return data;\n}\n\n// --- SERVICE MANAGEMENT ---\nexport const getServices = async (): Promise<Service[]> => {\n    const { data, error } = await supabase.from('services').select('*').order('platform').order('type');\n    if (error) {\n        console.error(\"Error getting services:\", JSON.stringify(error, null, 2));\n        return [];\n    }\n    return data || [];\n};\n\nexport const getServiceById = async (id: string): Promise<Service | undefined> => {\n    const { data, error } = await supabase.from('services').select('*').eq('id', id).single();\n    if (error) {\n        console.error(\"Error getting service by ID:\", error);\n        return undefined;\n    }\n    return data;\n}\n\nexport const addService = async (servicesToAdd: (Omit<Service, 'id' | 'available'>)[]): Promise<Service[] | null> => {\n    const newServices = servicesToAdd.map(data => ({\n        ...data,\n        platform: data.platform.toLowerCase(),\n        type: data.type.toLowerCase(),\n        available: true,\n        user_cooldown_hours: data.price === 0 ? data.user_cooldown_hours || 0 : 0,\n        link_cooldown_hours: data.price === 0 ? data.link_cooldown_hours || 0 : 0,\n    }));\n    \n    const { data: result, error } = await supabase.from('services').insert(newServices).select();\n\n    if (error) {\n        console.error(\"Error adding services:\", error);\n        return null;\n    }\n    return result;\n};\n\nexport const updateService = async (id: string, data: Partial<Omit<Service, 'id' | 'available'>>): Promise<Service | null> => {\n    const serviceUpdate: { [key: string]: any } = {\n        ...data,\n        platform: data.platform?.toLowerCase(),\n        type: data.type?.toLowerCase(),\n    };\n\n    // Ensure cooldowns are set to 0 if price is not 0\n    if (data.price !== 0) {\n        serviceUpdate.user_cooldown_hours = 0;\n        serviceUpdate.link_cooldown_hours = 0;\n    }\n\n    const { data: result, error } = await supabase.from('services').update(serviceUpdate).eq('id', id).select().single();\n     if (error) {\n        console.error(\"Error updating service:\", error);\n        return null;\n    }\n    return result;\n}\n\nexport const updateServiceAvailability = async (id: string, available: boolean): Promise<Service | null> => {\n    const { data, error } = await supabase.from('services').update({ available }).eq('id', id).select().single();\n    if (error) {\n        console.error(\"Error updating service availability:\", error);\n        return null;\n    }\n    return data;\n}\n\nexport const deleteService = async (id: string): Promise<{ success: boolean; error?: string }> => {\n    const { error } = await supabase.from('services').delete().eq('id', id);\n    if (error) {\n        console.error(\"Error deleting service:\", error);\n        return { success: false, error: error.message };\n    }\n    return { success: true };\n};\n\n\n// --- ORDER MANAGEMENT ---\nexport const getOrders = async (): Promise<Order[]> => {\n    const { data, error } = await supabase.from('orders').select('*').order('created_at', { ascending: false });\n    if (error) {\n        console.error(\"Error getting orders:\", JSON.stringify(error, null, 2));\n        return [];\n    }\n    \n    return data?.map((o: any) => ({\n        id: o.id,\n        userEmail: o.user_email,\n        username: o.username,\n        serviceId: o.service_id,\n        platform: o.platform,\n        serviceType: o.service_type,\n        quantity: o.quantity,\n        price: o.price,\n        status: o.status,\n        link: o.url,\n        createdAt: o.created_at,\n        comments: Array.isArray(o.comments) ? o.comments : null,\n    })) || [];\n}\n\nexport const placeOrder = async (newOrder: NewOrder): Promise<PlaceOrderResult> => {\n    const user = await getUser(newOrder.userEmail);\n    const service = await getServiceById(newOrder.serviceId);\n\n    if (!user || !service || !service.available) {\n        return { success: false, error: 'User or service not found, or service is unavailable.' };\n    }\n\n    const totalPrice = newOrder.quantity * service.price;\n\n    if (user.funds < totalPrice) {\n        return { success: false, error: 'Insufficient funds.' };\n    }\n    \n    const isCommentService = service.type.toLowerCase().includes('comment');\n\n    if (!isCommentService) {\n        if (newOrder.quantity < service.min || newOrder.quantity > service.max) {\n             return { success: false, error: `Quantity must be between ${service.min} and ${service.max}.` };\n        }\n    } else {\n        if (newOrder.quantity === 0 || !newOrder.comments || newOrder.comments.length === 0) {\n            return { success: false, error: 'Comments cannot be empty for this service.' };\n        }\n    }\n\n    // Check for 0 price service cooldowns\n    if (totalPrice === 0) {\n        const { user_cooldown_hours, link_cooldown_hours } = service;\n\n        if (user_cooldown_hours > 0) {\n            const userCooldownAgo = new Date(Date.now() - user_cooldown_hours * 60 * 60 * 1000).toISOString();\n            const { data: recentUserFreeOrder, error: userFreeOrderError } = await supabase\n                .from('orders')\n                .select('created_at')\n                .eq('user_email', newOrder.userEmail)\n                .eq('price', 0)\n                .gt('created_at', userCooldownAgo)\n                .order('created_at', { ascending: false })\n                .limit(1)\n                .single();\n            \n            if (userFreeOrderError && userFreeOrderError.code !== 'PGRST116') {\n                console.error(\"Error checking for recent user free orders:\", userFreeOrderError);\n                return { success: false, error: 'Could not verify free order eligibility.' };\n            }\n\n            if (recentUserFreeOrder) {\n                const cooldownExpiry = new Date(recentUserFreeOrder.created_at).getTime() + user_cooldown_hours * 60 * 60 * 1000;\n                return { success: false, error: `You must wait ${user_cooldown_hours} hour(s) between free orders.`, errorType: 'USER_COOLDOWN', cooldownExpiry };\n            }\n        }\n\n        if (link_cooldown_hours > 0) {\n            const linkCooldownAgo = new Date(Date.now() - link_cooldown_hours * 60 * 60 * 1000).toISOString();\n            const { data: recentLinkFreeOrder, error: linkFreeOrderError } = await supabase\n                .from('orders')\n                .select('created_at')\n                .eq('url', newOrder.link) // Check against the link for this specific service\n                .eq('service_id', service.id)\n                .eq('price', 0)\n                .gt('created_at', linkCooldownAgo)\n                .order('created_at', { ascending: false })\n                .limit(1)\n                .single();\n\n            if (linkFreeOrderError && linkFreeOrderError.code !== 'PGRST116') { \n                console.error(\"Error checking for recent link free orders:\", linkFreeOrderError);\n                return { success: false, error: 'Could not verify free order eligibility.' };\n            }\n\n            if (recentLinkFreeOrder) {\n                const cooldownExpiry = new Date(recentLinkFreeOrder.created_at).getTime() + link_cooldown_hours * 60 * 60 * 1000;\n                return { success: false, error: `User is on cooldown for this free service and link.`, errorType: 'LINK_COOLDOWN', cooldownExpiry };\n            }\n        }\n    }\n\n    const orderData: { [key: string]: any } = {\n        user_email: newOrder.userEmail,\n        username: user.username,\n        service_id: newOrder.serviceId,\n        platform: service.platform,\n        service_type: service.type,\n        quantity: newOrder.quantity,\n        price: totalPrice,\n        url: newOrder.link,\n        status: \"Pending\",\n    };\n\n    if (newOrder.comments && newOrder.comments.length > 0) {\n        orderData.comments = newOrder.comments;\n    }\n\n    const { data: createdOrder, error } = await supabase\n        .from('orders')\n        .insert(orderData)\n        .select()\n        .single();\n    \n    if (error) {\n        console.error(\"Error placing order:\", JSON.stringify(error, null, 2));\n        return { success: false, error: 'Failed to create order in database.' };\n    }\n\n    if (totalPrice > 0) {\n        const newBalance = user.funds - totalPrice;\n        await setUserFunds(user.email, newBalance);\n    }\n    \n    const resultOrder: Order = {\n        id: createdOrder.id,\n        userEmail: createdOrder.user_email,\n        username: createdOrder.username,\n        serviceId: createdOrder.service_id,\n        platform: createdOrder.platform,\n        serviceType: createdOrder.service_type,\n        quantity: createdOrder.quantity,\n        price: createdOrder.price,\n        status: createdOrder.status,\n        link: createdOrder.url,\n        createdAt: createdOrder.created_at,\n        comments: Array.isArray(createdOrder.comments) ? createdOrder.comments : null,\n    };\n    return { success: true, order: resultOrder };\n};\n\n\nexport const updateOrderStatus = async (orderId: string, status: \"Complete\" | \"Cancelled\"): Promise<Order | null> => {\n    const { data: order, error: fetchError } = await supabase.from('orders').select('*').eq('id', orderId).single();\n    if (fetchError || !order) {\n        console.error(\"Error fetching order to update status:\", fetchError);\n        return null;\n    }\n\n    if (order.status !== 'Pending') return null;\n\n    if (status === 'Cancelled' && order.price > 0) {\n        const user = await getUser(order.user_email);\n        if(user) {\n            const newBalance = user.funds + order.price;\n            await setUserFunds(user.email, newBalance);\n        }\n    }\n    \n    const { data: updatedOrder, error: updateError } = await supabase.from('orders').update({ status }).eq('id', orderId).select().single();\n    \n    if (updateError) {\n        console.error(\"Error updating order status:\", updateError);\n        if (status === 'Cancelled' && order.price > 0) {\n            const user = await getUser(order.user_email);\n            if(user) {\n                await setUserFunds(user.email, user.funds - order.price);\n            }\n        }\n        return null;\n    }\n    \n    const resultOrder: Order = {\n        id: updatedOrder.id,\n        userEmail: updatedOrder.user_email,\n        username: updatedOrder.username,\n        serviceId: updatedOrder.service_id,\n        platform: updatedOrder.platform,\n        serviceType: updatedOrder.service_type,\n        quantity: updatedOrder.quantity,\n        price: updatedOrder.price,\n        status: updatedOrder.status,\n        link: updatedOrder.url,\n        createdAt: updatedOrder.created_at,\n        comments: Array.isArray(updatedOrder.comments) ? updatedOrder.comments : null,\n    };\n    return resultOrder;\n}\n\n\n// --- DUMMY/LEGACY FUNCTIONS ---\nexport const getUsers = async (): Promise<User[]> => {\n    const { data, error } = await supabase.from('users').select('*');\n    if (error) return [];\n    return data || [];\n};\nexport const getPrices = (): ServicePrices => ({\n  instagram: { followers: 0, likes: 0 },\n  tiktok: { followers: 0, likes: 0 },\n  youtube: { followers: 0, likes: 0 },\n});\nexport const updatePrices = (newPrices: ServicePrices) => { /* no-op */ };\n\n// Session management is now handled by Supabase and AuthContext\nexport const setSession = (email: string) => { /* no-op */ };\nexport const getSession = (): string | null => null;\nexport const clearSession = () => { /* no-op */ };\n\nexport * from \"@/types\";\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/AuthContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  type ReactNode,\n  useCallback,\n} from \"react\";\nimport { supabase } from \"@/lib/supabase\";\nimport { getUser, type User } from \"@/lib/data\";\nimport type { AuthChangeEvent, Session, AuthError } from \"@supabase/supabase-js\";\n\ninterface AuthContextType {\n  user: User | null;\n  login: (credentials: Pick<User, \"email\" | \"password\">) => Promise<{ success: boolean; error?: string }>;\n  logout: () => void;\n  isLoading: boolean;\n  refreshUser: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchUserByEmail = useCallback(async (email: string) => {\n    try {\n      const profile = await getUser(email);\n      setUser(profile);\n    } catch(e) {\n      console.error(\"Error fetching user profile\", e);\n      setUser(null);\n    }\n  }, []);\n\n  const refreshUser = useCallback(async () => {\n    if (user?.email) {\n      setIsLoading(true);\n      try {\n        await fetchUserByEmail(user.email);\n      } catch (e) {\n        console.error(\"Error refreshing user:\", e);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [user, fetchUserByEmail]);\n\n  useEffect(() => {\n    const handleAuthStateChange = async (event: AuthChangeEvent, session: Session | null) => {\n        try {\n            if (session?.user?.email) {\n                await fetchUserByEmail(session.user.email);\n            } else {\n                setUser(null);\n            }\n        } catch(e) {\n            console.error(\"Auth state change error:\", e);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n    // Check initial session\n    const checkInitialSession = async () => {\n        setIsLoading(true);\n        try {\n            const { data: { session }, error } = await supabase.auth.getSession();\n            \n            if (error && (error as AuthError).message !== 'Invalid Refresh Token: Refresh Token Not Found') {\n                console.error(\"Error getting session:\", error);\n            }\n            \n            await handleAuthStateChange('INITIAL_SESSION', session);\n        } catch (e) {\n            console.error(\"Failed to check initial session:\", e);\n            setUser(null);\n        } finally {\n             setIsLoading(false);\n        }\n    };\n    \n    checkInitialSession();\n    \n    const { data: authListener } = supabase.auth.onAuthStateChange(async (event, session) => {\n        if (event === \"SIGNED_IN\" || event === \"SIGNED_OUT\" || event === \"TOKEN_REFRESHED\") {\n            setIsLoading(true);\n            await handleAuthStateChange(event, session);\n        }\n    });\n\n    return () => {\n      authListener.subscription.unsubscribe();\n    };\n  }, [fetchUserByEmail]);\n\n  const login = async ({ email, password }: Pick<User, \"email\" | \"password\">) => {\n    try {\n        const { error } = await supabase.auth.signInWithPassword({ email, password });\n        if (error) {\n            return { success: false, error: error.message };\n        }\n        return { success: true };\n    } catch (error) {\n        console.error(\"Login failed:\", error);\n        return { success: false, error: \"Failed to fetch. Please check your Supabase credentials in your environment variables.\" };\n    }\n  };\n\n  const logout = async () => {\n    await supabase.auth.signOut();\n  };\n\n  const value = { user, login, logout, isLoading, refreshUser };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}